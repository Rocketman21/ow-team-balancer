{"version":3,"sources":["components/ui/Flex.tsx","components/ui/TextInput.tsx","components/ui/OwIcon.tsx","helpers.ts","components/Table.tsx","components/ui/Tabs.tsx","firebaseRef.ts","hooks.ts","components/PlayerList.tsx","components/MatchCard.tsx","algorithm/balancer.ts","components/ui/Button.tsx","components/Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Flex","children","direction","indent","width","height","justifyContent","className","wrap","classes","cn","style","flexDirection","TextInput","props","type","OwIcon","kind","src","alt","getRandomInt","max","Math","floor","random","getPlayersAverageScore","players","round","reduce","memo","player","points","length","zeroPadding","padding","getLeagueIconKind","React","hasPointsColumn","isRevesed","isSmall","useMemo","overflowY","headerColumns","cols","key","reverse","getBodyColumns","useCallback","role","battletag","map","id","Tabs","tabs","activeTab","onClick","handleTabClick","event","currentTarget","value","getTabClasses","title","firebase","initializeApp","apiKey","authDomain","projectId","googleAuthProvider","auth","GoogleAuthProvider","usersCollection","firestore","collection","playersCollection","accessCollection","useAuth","useState","currentUser","uid","userID","setUserID","useEffect","onAuthStateChanged","user","isLoggedIn","PlayerList","playersList","setPlayers","inputData","setInputData","setActiveTab","access","setAccess","a","async","undefined","doc","get","accessDoc","docData","data","console","error","useAccess","querySnapshot","queryPlayers","forEach","push","handleInput","target","trim","write","onChange","placeholder","preventDefault","add","created","Date","docRef","log","MatchCard","number","match","getMatchList","teams","_","groupBy","offense","tank","support","Array","from","min","index","firstInPair","lastInPair","makeTeams","sortBy","getSortedPlayers","getBalancedMatches","matchID","averageScore","team","groupedA","groupedB","unitedGroups","mapValues","group","balancedMatch","playerClosestToAverage","score","playersDifference","difference","abs","minDifference","find","wrapedPlayer","getPlayerClosestToScore","filter","Button","isPrimary","Login","signOut","signInWithPopup","result","additionalUserInfo","isNewUser","name","displayName","email","App","randomPlayers","toString","matches","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.510fadec.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport '../../styles/Flex.css';\n\nexport interface FlexProps {\n\tdirection?: 'row' | 'column' | 'row-reverse';\n\tindent?: 'small' | 'medium' | 'large';\n\tjustifyContent?: 'flex-end' | 'center' | 'space-between' | 'space-around';\n\twrap?: 'wrap';\n\tchildren?: React.ReactNode;\n\twidth?: string | number;\n\theight?: string | number;\n\tclassName?: string;\n}\n\nconst Flex = ({children, direction='row', indent, width, height, justifyContent, className, wrap}: FlexProps) => {\n\tconst classes = cn(\n\t\t'ui-flex',\n\t\t'ui-flex--direction_row',\n\t\tclassName,\n\t\t{\n\t\t\t'ui-flex--indent_small': indent === 'small',\n\t\t\t'ui-flex--indent_medium': indent === 'medium',\n\t\t\t'ui-flex--indent_large': indent === 'large',\n\t\t\t'ui-flex--wrap_wrap': wrap === 'wrap',\n\t\t}\n\t);\n\t\n\treturn (\n\t\t<div\n\t\t\tclassName={classes}\n\t\t\tstyle={{width, height, flexDirection: direction, justifyContent}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Flex;","import React, { InputHTMLAttributes } from 'react';\nimport '../../styles/TextInput.css';\nimport Flex, { FlexProps } from './Flex';\n\ntype TextInputProps = InputHTMLAttributes<HTMLInputElement> & FlexProps;\n\nconst TextInput = (props: TextInputProps) => (\n\t<Flex width={props.width}>\n\t\t<input type=\"text\" className=\"ui-text-input box\" {...props} />\n\t</Flex>\n);\n\nexport default TextInput;","import React from 'react';\nimport { League } from 'types';\n\ninterface Props {\n\tkind: League;\n\twidth: number;\n}\n\nconst OwIcon = ({kind, width}: Props) => (\n\t<img src={`img/${kind}.png`} width={width} alt={kind} />\n);\n\nexport default OwIcon;","import { Player } from \"types\";\n\nexport const getRandomInt = (max: number) => {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\nexport const getPlayersAverageScore = (players: Player[]) => Math.round(\n\tplayers.reduce((memo, player) => memo + player.points, 0) / players.length\n);","import React, { useMemo, useCallback, Fragment } from 'react';\nimport '../styles/Table.css';\nimport OwIcon from './ui/OwIcon';\nimport cn from 'classnames';\nimport { Player, League } from 'types';\nimport { getPlayersAverageScore } from 'helpers';\n\ninterface Props {\n\tplayers: Player[];\n\tisSmall?: boolean;\n\theight?: number | string;\n\twidth?: number | string;\n\thasPointsColumn?: boolean;\n\tisRevesed?: boolean;\n}\n\nconst zeroPadding = {padding: 0};\nconst getLeagueIconKind = (points: number): League => {\n\tif (points < 1500) {\n\t\treturn 'bronze';\n\t} else if (points >= 4000) {\n\t\treturn 'gm';\n\t}\n\n\treturn (['silver', 'gold', 'platinum', 'diamond', 'master'] as League[])[Math.floor(points / 500) - 3];\n}\n\nconst Table = ({players, height, width, hasPointsColumn, isRevesed, isSmall}: Props) => {\n\tconst className = cn(\n\t\t'ui-table',\n\t\t{\n\t\t\t'ui-table--kind_small': isSmall,\n\t\t\t'ui-table--kind_large': !isSmall,\n\t\t\t'ui-table--display_reversed': isRevesed,\n\t\t}\n\t);\n\n\tconst style = useMemo(() => ({height, width, overflowY: 'auto' as 'auto'}), [height, width]);\n\n\tconst headerColumns = useMemo(() => {\n\t\tconst points = getPlayersAverageScore(players);\n\t\tconst cols = [\n\t\t\t<th key=\"hcol1\"></th>,\n\t\t\t<Fragment key=\"hcol2\">\n\t\t\t\t<th style={{width: '8em'}}>\n\t\t\t\t\t{isSmall ? points : 'battletag'}\n\t\t\t\t</th>\n\t\t\t\t{hasPointsColumn && <th>Points</th>}\n\t\t\t</Fragment>,\n\t\t\t<th key=\"hcol3\" style={zeroPadding}>{isSmall && <OwIcon kind={getLeagueIconKind(points)} width={30} />}</th>\n\t\t];\n\n\t\treturn isRevesed ? cols.reverse() : cols;\n\t}, [hasPointsColumn, isRevesed, isSmall, players]);\n\n\tconst getBodyColumns = useCallback((player: Player) => {\n\t\tconst cols = [\n\t\t\t<td key=\"bcol1\" style={zeroPadding}><OwIcon kind={player.role} width={20} /></td>,\n\t\t\t<Fragment key=\"bcol2\">\n\t\t\t\t<td>{player.battletag}</td>\n\t\t\t\t{hasPointsColumn && <td>{player.points}</td>}\n\t\t\t</Fragment>,\n\t\t\t<td key=\"bcol3\" style={isSmall ? zeroPadding : {padding: '3px 5px 0 5px'}}><OwIcon kind={getLeagueIconKind(player.points)} width={30} /></td>\n\t\t];\n\n\t\treturn isRevesed ? cols.reverse() : cols;\n\t}, [hasPointsColumn, isRevesed, isSmall]);\n\n\treturn (\n\t\t<div className={className} style={style}>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>{headerColumns}</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody className=\"table-body\">\n\t\t\t\t\t{players.map(player => (\n\t\t\t\t\t\t<tr key={player.id}>{getBodyColumns(player)}</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Table);","import React, { ReactNode, useCallback } from 'react';\nimport Flex from './Flex';\nimport cn from 'classnames';\nimport '../../styles/Tabs.css';\n\ninterface Props {\n\ttabs: Array<{title: ReactNode, value: string}>,\n\tactiveTab: string;\n\tonClick: (value: string) => void;\n}\n\nconst Tabs = ({tabs, activeTab, onClick}: Props) => {\n\tconst handleTabClick = useCallback((event: React.SyntheticEvent<HTMLButtonElement>) => {\n\t\tonClick(event.currentTarget.value);\n\t}, [onClick]);\n\n\tconst getTabClasses = useCallback((value) => cn({\n\t\t'ui-tabs-btn': true,\n\t\t'ui-tabs-btn_active': activeTab === value,\n\t}), [activeTab]);\n\n\treturn (\n\t\t<Flex className=\"ui-tabs\">\n\t\t\t{tabs.map(({title, value}) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={value}\n\t\t\t\t\tclassName={getTabClasses(value)}\n\t\t\t\t\tonClick={handleTabClick}\n\t\t\t\t\tvalue={value}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</Flex>\n\t);\n}\n\nexport default Tabs;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nfirebase.initializeApp({\n\tapiKey: 'AIzaSyAZqUUv1gkGq0ZaxZlpT4dB634pZqnhMgg',\n\tauthDomain: 'ow-balancer-api.firebaseapp.com',\n\tprojectId: 'ow-balancer-api'\n});\n\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport const usersCollection = firebase.firestore().collection('users');\nexport const playersCollection = firebase.firestore().collection('players');\nexport const accessCollection = firebase.firestore().collection('access');","import { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { accessCollection } from 'firebaseRef';\nimport { Access } from 'types';\n\nexport function useAuth() {\n\tconst auth = firebase.auth();\n\tconst [userID, setUserID] = useState(auth.currentUser?.uid);\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged(user => {\n\t\t\tsetUserID(user?.uid);\n\t\t});\n\t}, [auth]);\n\n\treturn {isLoggedIn: !!userID, userID};\n}\n\nexport function useAccess() {\n\tconst {isLoggedIn, userID} = useAuth();\n\tconst [access, setAccess] = useState<Access | undefined>();\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tif (!isLoggedIn) {\n\t\t\t\tsetAccess(undefined);\n\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst accessDoc = await accessCollection.doc(userID).get();\n\t\t\t\tconst docData = accessDoc.data();\n\t\n\t\t\t\tif (docData) {\n\t\t\t\t\tsetAccess(docData as Access);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t})();\n\t}, [isLoggedIn, userID]);\n\n\treturn access;\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport TextInput from './ui/TextInput';\nimport Flex from './ui/Flex';\nimport Table from './Table';\nimport {Player} from '../types';\nimport Tabs from './ui/Tabs';\nimport { playersCollection } from 'firebaseRef';\nimport { useAccess } from 'hooks';\n\nconst tabs = [\n\t{\n\t\ttitle: 'Player database',\n\t\tvalue: 'db',\n\t},\n\t{\n\t\ttitle: 'Match pool',\n\t\tvalue: 'match',\n\t},\n];\n\nconst PlayerList = ({playersList}: {playersList: Player[]}) => {\n\tconst [players, setPlayers] = useState<Player[]>(playersList);\n\tconst [inputData, setInputData] = useState('');\n\tconst [activeTab, setActiveTab] = useState('db');\n\tconst access = useAccess();\n\n\tuseEffect(() => {\n\t\tif (players.length) return;\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst querySnapshot = await playersCollection.get();\n\t\t\t\tconst queryPlayers: Player[] = [];\n\n\t\t\t\tquerySnapshot.forEach(doc => queryPlayers.push(doc.data() as Player));\n\t\t\t\tsetPlayers(queryPlayers);\n\t\t\t} catch(error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t})();\n\t}, [players]);\n\n\tconst handleSubmit = async (event: React.SyntheticEvent) => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst docRef = await playersCollection.add({\n\t\t\t\tbattletag: inputData,\n\t\t\t\tcreated: new Date(),\n\t\t\t});\n\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t}\n\t}\n\n\tconst handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetInputData(event.target.value.trim());\n\t}\n\t\n\tconst handleTabClick = useCallback((value: string) => {\n\t\tsetActiveTab(value);\n\t}, []);\n\n\treturn (\n\t\t<Flex direction=\"column\">\n\t\t\t<Tabs tabs={tabs} activeTab={activeTab} onClick={handleTabClick} />\n\t\t\t{access?.players?.write &&\n\t\t\t\t<form>\n\t\t\t\t\t<Flex justifyContent=\"space-between\">\n\t\t\t\t\t\t<TextInput width={100} onChange={handleInput} placeholder=\"\" />\n\t\t\t\t\t\t<TextInput width={100} onChange={handleInput} placeholder=\"\" />\n\t\t\t\t\t\t<TextInput width={100} onChange={handleInput} placeholder=\"\" />\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<button type=\"submit\" onClick={handleSubmit}>Добавить</button>\n\t\t\t\t</form>\n\t\t\t}\n\t\t\t<Table players={players} width={430} height=\"75vh\" hasPointsColumn />\n\t\t</Flex>\n\t);\n};\n\nexport default PlayerList;","import React from 'react';\nimport Table from './Table';\nimport Flex from './ui/Flex';\nimport '../styles/match-card.css';\nimport { Match } from 'types';\n\ninterface Props {\n\tnumber: number;\n\tmatch: Match;\n}\n\nconst MatchCard = ({number, match}: Props) => (\n\t<Flex className=\"match-card\" direction=\"column\">\n\t\t<span className=\"match-card--header\">MATCH #{number}</span>\n\t\t<Flex>\n\t\t\t<Table players={match[0]} isSmall />\n\t\t\t<Table players={match[1]} isSmall isRevesed />\n\t\t</Flex>\n\t</Flex>\n);\n\nexport default MatchCard;","import _ from 'lodash';\nimport { Player, Match } from 'types';\nimport { getPlayersAverageScore } from 'helpers';\n\nexport const makeTeams = (players: Player[]) => {\n\tconst {offense, tank, support} = _.groupBy(players, 'role');\n\n\tif (!offense || !tank || !support) return [];\n\n\treturn Array\n\t\t.from({length: Math.min(offense.length, tank.length, support.length) / 2})\n\t\t.map((_, index) => {\n\t\t\tconst firstInPair = index * 2;\n\t\t\tconst lastInPair = index * 2 + 1;\n\n\t\t\treturn [\n\t\t\t\toffense[firstInPair],\n\t\t\t\toffense[lastInPair],\n\t\t\t\ttank[firstInPair],\n\t\t\t\ttank[lastInPair],\n\t\t\t\tsupport[firstInPair],\n\t\t\t\tsupport[lastInPair],\n\t\t\t];\n\t});\n}\n\nconst getSortedPlayers = (players: Player[]) => _.sortBy(players, 'points');\n\nexport const getMatchList = (players: Player[]) => {\n\tconst teams = makeTeams(getSortedPlayers(players));\n\n\treturn Array\n\t\t.from({length: teams.length / 2})\n\t\t.map((_, index) => [teams[index * 2], teams[index * 2 + 1]]);\n};\n\nconst getPlayerClosestToScore = (players: Player[], score: number) => {\n\tconst playersDifference = players.map(player => ({player, difference: Math.abs(score - player.points)}));\n\tconst minDifference = Math.min(..._.map(playersDifference, 'difference'));\n\t\n\treturn playersDifference.find(wrapedPlayer => wrapedPlayer.difference === minDifference)!.player;\n};\n\nexport const getBalancedMatches = (players: Player[]) => {\n\tconst matches = getMatchList(players);\n\n\tconst balancedMatches = matches.map((match, matchID) => {\n\t\tconst averageScore = getPlayersAverageScore([...match[0], ...match[1]]);\n\t\tconst [groupedA, groupedB] = match.map(team => _.groupBy(team, 'role'));\n\t\tconst unitedGroups = _.mapValues(groupedA, (group, role) => [...group, ...groupedB[role]]);\n\n\t\tconst balancedMatch: Match = [[], []];\n\n\t\t_.forEach(unitedGroups, group => {\n\t\t\tgroup.forEach((player, index) => {\n\t\t\t\tconst playerClosestToAverage = getPlayerClosestToScore(group, averageScore);\n\n\t\t\t\tbalancedMatch[index % 2].push(playerClosestToAverage);\n\t\t\t\tgroup = group.filter(player => player !== playerClosestToAverage);\n\t\t\t});\n\t\t});\n\n\t\treturn balancedMatch;\n\t});\n\n\treturn balancedMatches;\n}","import React, { ReactNode } from 'react';\nimport '../../styles/Button.css';\nimport cn from 'classnames';\n\ninterface Props {\n\tchildren: ReactNode;\n\tisPrimary?: boolean;\n\tonClick: (event: React.SyntheticEvent<HTMLButtonElement>) => void;\n}\n\nconst Button = ({children, isPrimary, onClick}: Props) => (\n\t<button\n\t\tclassName={cn({\n\t\t\t'ui-button': true,\n\t\t\t'ui-button_primary': isPrimary,\n\t\t})}\n\t\tonClick={onClick}\n\t>\n\t\t\t{children}\n\t</button>\n);\n\nexport default Button;","import React from 'react';\nimport firebase from 'firebase/app';\nimport { usersCollection, googleAuthProvider } from 'firebaseRef';\nimport { useAuth } from 'hooks';\nimport Button from './ui/Button';\n\nconst Login = () => {\n\tconst {isLoggedIn} = useAuth();\n\n\tconst handleLoginClick = async () => {\n\t\tif (isLoggedIn) {\n\t\t\tfirebase.auth().signOut();\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tconst result = await firebase.auth().signInWithPopup(googleAuthProvider);\n\t\t\t\tconst {user} = result;\n\n\t\t\t\tif (user && result.additionalUserInfo?.isNewUser) {\n\t\t\t\t\tawait usersCollection.add({\n\t\t\t\t\t\tid: user.uid,\n\t\t\t\t\t\tname: user?.displayName,\n\t\t\t\t\t\temail: user?.email,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tconsole.error(error);\n\t\t\t};\n\t\t}\n\t}\n\n\treturn (\n\t\t<Button isPrimary={!isLoggedIn} onClick={handleLoginClick}>\n\t\t\t{isLoggedIn ? 'Logout' : 'Login'}\n\t\t</Button>\n\t);\n};\n\nexport default Login;","import React from 'react';\nimport './styles/App.css';\nimport './styles/ui-helpers.css';\nimport PlayerList from './components/PlayerList';\nimport Flex from 'components/ui/Flex';\nimport MatchCard from 'components/MatchCard';\nimport { getBalancedMatches } from 'algorithm/balancer';\nimport { getRandomInt } from 'helpers';\nimport { Player } from 'types';\nimport Login from 'components/Login';\n\nconst App = () => {\n\tconst randomPlayers = Array\n\t.from({length: 500})\n\t.map((_, index) => ({\n\t\tid: index.toString(),\n\t\trole: ['offense', 'tank', 'support'][getRandomInt(3)] as Player[\"role\"],\n\t\tpoints: getRandomInt(5000),\n\t\tbattletag: `Tester#${getRandomInt(9999)}`\n\t}));\n\tconst matches = getBalancedMatches(randomPlayers);\n\n\treturn (\n\t\t<Flex className=\"App\" direction=\"column\">\n\t\t\t<Flex justifyContent=\"flex-end\" indent=\"large\">\n\t\t\t\t<Login />\n\t\t\t</Flex>\n\t\t\t<Flex indent=\"large\">\n\t\t\t\t<PlayerList playersList={randomPlayers} />\n\t\t\t\t<Flex className=\"match-table\" height=\"85vh\" wrap=\"wrap\">\n\t\t\t\t\t{matches.map((match, index) => <MatchCard key={index} match={match} number={index + 1} />)}\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n\t\t</Flex>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}